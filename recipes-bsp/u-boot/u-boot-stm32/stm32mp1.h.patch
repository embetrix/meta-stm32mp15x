diff --git a/include/configs/stm32mp1.h b/include/configs/stm32mp1.h
index becca68a78..8f39734ee0 100644
--- a/include/configs/stm32mp1.h
+++ b/include/configs/stm32mp1.h
@@ -138,19 +138,10 @@
  */
 
 #define STM32MP_BOOTCMD "bootcmd_stm32mp=" \
-	"echo \"Boot over ${boot_device}${boot_instance}!\";" \
-	"if test ${boot_device} = serial || test ${boot_device} = usb;" \
-	"then stm32prog ${boot_device} ${boot_instance}; " \
+	"if test ${boot_device} = serial || test ${boot_device} = usb; then " \
+		"stm32prog ${boot_device} ${boot_instance}; " \
 	"else " \
-		"run env_check;" \
-		"if test ${boot_device} = mmc;" \
-		"then env set boot_targets \"mmc${boot_instance}\"; fi;" \
-		"if test ${boot_device} = nand ||" \
-		  " test ${boot_device} = spi-nand ;" \
-		"then env set boot_targets ubifs0; fi;" \
-		"if test ${boot_device} = nor;" \
-		"then env set boot_targets mmc0; fi;" \
-		"run distro_bootcmd;" \
+		"if test ${boot_device} = mmc; then run sd_boot; fi;" \
 	"fi;\0"
 
 /* DTIMG command added only for Android distribution */
@@ -223,33 +214,44 @@
 
 #include <config_distro_bootcmd.h>
 
+#define SD_BOOT \
+	"sd_boot=if test ${active_system} = 1; then setenv mmcroot /dev/mmcblk0p5 && setenv bootpart 0:5; fi;" \
+	"ext4load mmc ${bootpart} ${kernel_addr_r} /boot/${image.linux};" \
+	"setenv bootargs \"console=${console} root=${mmcroot} ${optargs}\";" \
+	"bootm ${kernel_addr_r}\0"
+
+#define NET_BOOT \
+	"net_boot=dhcp; setenv serverip ${gatewayip};" \
+	"tftp ${kernel_addr_r} ${image.linux};" \
+	"setenv bootargs \"console=${console} root=${mmcroot} ${optargs}\";" \
+	"bootm ${kernel_addr_r}\0"
 /*
  * memory layout for 32M uncompressed/compressed kernel,
  * 1M fdt, 1M script, 1M pxe and 1M for splashimage
  * and the ramdisk at the end.
  */
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	"bootdelay=1\0" \
-	"kernel_addr_r=0xc2000000\0" \
+	"bootdelay=0\0" \
+	"bootpart=0:4\0" \
+	"active_system=0\0" \
+	"stdin=serial\0" \
+	"stdout=serial\0" \
+	"stderr=serial\0" \
+	"console=ttySTM0,115200\0" \
+	"kernel_addr_r=0xC8000000\0" \
+	"image.linux=fitImage\0" \
+	"optargs=rw rootwait quiet loglevel=0 vt.global_cursor_default=0 fbcon=rotate:3\0" \
+	"mmcroot=/dev/mmcblk0p4\0" \
 	"fdt_addr_r=0xc4000000\0" \
 	"scriptaddr=0xc4100000\0" \
-	"pxefile_addr_r=0xc4200000\0" \
-	"splashimage=0xc4300000\0"  \
 	"ramdisk_addr_r=0xc4400000\0" \
-	"altbootcmd=run bootcmd\0" \
-	"env_check=" \
-		"env exists env_ver || env set env_ver ${ver};" \
-		"if env info -p -d -q; then env save; fi;" \
-		"if test \"$env_ver\" != \"$ver\"; then" \
-		" echo \"*** Warning: old environment ${env_ver}\";" \
-		" echo '* set default: env default -a; env save; reset';" \
-		" echo '* update current: env set env_ver ${ver}; env save';" \
-		"fi;\0" \
+	"fdt_high=0xffffffff\0" \
+	"initrd_high=0xffffffff\0" \
+	"bootlimit=3\0" \
+	"altbootcmd=if test ${active_system} = 1; then setenv active_system 0; else setenv active_system 1; fi; saveenv; run bootcmd\0" \
 	STM32MP_BOOTCMD \
-	STM32MP_ANDROID \
-	PARTS_DEFAULT \
-	BOOTENV \
-	"boot_net_usb_start=true\0"
+	SD_BOOT \
+	NET_BOOT
 
 #endif /* ifndef CONFIG_SPL_BUILD */
 #endif /* ifdef CONFIG_DISTRO_DEFAULTS*/
